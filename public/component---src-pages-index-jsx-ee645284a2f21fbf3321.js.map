{"version":3,"file":"component---src-pages-index-jsx-ee645284a2f21fbf3321.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/blog-card/index.jsx","webpack://gatsby-starter-default/./src/components/live-streaming/index.jsx","webpack://gatsby-starter-default/./src/components/match/index.jsx","webpack://gatsby-starter-default/./src/components/title/index.jsx","webpack://gatsby-starter-default/./src/components/testimonial/index.jsx","webpack://gatsby-starter-default/./src/container/home/testimonial/index.jsx","webpack://gatsby-starter-default/./src/container/home/watch-live-streaming/index.jsx","webpack://gatsby-starter-default/./src/data/images/hero/hero-bg1.webp","webpack://gatsby-starter-default/./src/container/home/hero/index.jsx","webpack://gatsby-starter-default/./src/components/welcome-features/index.jsx","webpack://gatsby-starter-default/./src/container/home/welcome-features/index.jsx","webpack://gatsby-starter-default/./src/container/home/match/index.jsx","webpack://gatsby-starter-default/./src/container/home/popular-game/index.jsx","webpack://gatsby-starter-default/./src/container/home/latest-blog/index.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst BlogCard = ({ title, date, slug, dateSlug, image1 }) => {\n    return (\n        <div className=\"single_blog flex sm:flex-row md:flex-row items-center mt-7\">\n            <div className=\"blog_thumb w-28 justify-center items-center sm:w-28 md:w-28 lg:w-48 flex-shrink-0\">\n                <Link to={`/${slug}`} className=\"block\">\n                    {image1 ? (\n                        <GatsbyImage\n                            className=\"rounded-4xl\"\n                            image={getImage(image1)}\n                            alt={title}\n                        />\n                    ) : (\n                        <StaticImage\n                            className=\"rounded-4xl\"\n                            src=\"../../assets/images/placeholder-image.png\"\n                            alt={title}\n                        />\n                    )}\n                </Link>\n            </div>\n            <div className=\"blog_content ml-4 md:ml-4 lg:ml-9\">\n                <div className=\"blog_date\">\n                    <Link to={`/date/${dateSlug}`} className=\"mb-2 block\">\n                        <i className=\"icofont-calendar text-primary mr-2\"></i>\n                        {date}\n                    </Link>\n                </div>\n                <h3 className=\"font-bold uppercase mb-1 md:mb-3 md:text-18base lg:text-md\">\n                    <Link to={`/${slug}`} className=\"hover:text-primary\">\n                        {title || \"Blog Title\"}\n                    </Link>\n                </h3>\n                <Link\n                    to={`/${slug}`}\n                    className=\"pl-11 text-sm font-medium sm:uppercase hover:text-primary relative \n                    text-white \n                    after:absolute\n                    content-after\n                  after:bg-primary\n                    after:w-8 \n                    after:h-0.5\n                    after:z-0 \n                    after:top-1/2 \n                    after:left-0 \n                    after:transform \n                    after:-translate-y-2/4 \n                    after:transition \n                    after:opacity-100\"\n                >\n                    More Deatails\n                </Link>\n            </div>\n        </div>\n    );\n};\nBlogCard.propTypes = {\n    title: PropTypes.string,\n    author: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    dateSlug: PropTypes.string,\n    image1: PropTypes.object,\n};\nexport default BlogCard;\n","import React, { Fragment, useState } from \"react\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport PropTypes from \"prop-types\";\nimport Video from \"@components/shared/video\";\n\nconst LiveStreaming = ({ title, image, video_link }) => {\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <Fragment>\n            <div className=\"gaming_video_thumb relative inline-block w-auto\">\n                <GatsbyImage\n                    className=\"h-260 md:h-auto\"\n                    image={getImage(image)}\n                    alt=\"\"\n                />\n                <div className=\"gaming_video_paly_icon cursor-pointer absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                    <span\n                        className=\"video_popup w-14 h-14 md:w-24 md:h-24 lg:w-28 lg:h-28 inline-block\"\n                        role=\"button\"\n                        tabIndex=\"0\"\n                        onClick={() => setOpen(true)}\n                        onKeyPress={(e) => console.log(e)}\n                    >\n                        <span\n                            className=\"animate-ping absolute inline-flex\n                     h-full w-full rounded-full bg-purple-100 opacity-50\"\n                        ></span>\n                        <StaticImage\n                            className=\"relative\"\n                            src=\"../../data/images/icons/play-btn.webp\"\n                            alt=\"\"\n                        />\n                    </span>\n                </div>\n\n                <div className=\"live_streaming_text absolute bottom-0 left-1/2 transform -translate-x-1/2\">\n                    <StaticImage\n                        src=\"../../data/images/live-video/text-mini-shape.webp\"\n                        alt=\"\"\n                    />\n                    <h3 className=\"text-white absolute bottom-0 inset-x-1/2 transform -translate-x-1/2 p-1 flex items-center justify-center w-full h-full font-bold uppercase text-xs  sm:text-sm md:text-22base lg:text-md\">\n                        {title}\n                    </h3>\n                </div>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n        </Fragment>\n    );\n};\nLiveStreaming.propTypes = {\n    title: PropTypes.string,\n    image: PropTypes.object,\n    video_link: PropTypes.string,\n};\nexport default LiveStreaming;\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport PropTypes from \"prop-types\";\nimport Video from \"@components/shared/video\";\nconst MatchItem = ({\n    title,\n    registeredTeams,\n    date,\n    slug,\n    tesmSlug1,\n    tesmSlug2,\n    video_link,\n    teamImage1,\n    teamImage2,\n}) => {\n    // Video Modal Popup\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <Fragment>\n            <div className=\"flex flex-col lg:flex-row lg:justify-between mb-8 items-center last:mb-0 border-4 border-secondary-90 bg-secondary-100 border-opacity-100 rounded-4xl px-6 py-8 lg:py-16 lg:px-8\">\n                <div className=\"flex-1 text-center lg:text-left mb-6 lg:mb-0 upcoming_gaming_list\">\n                    <div className=\"upcoming_gaming_text text-white\">\n                        <p>{date}</p>\n                        <h3 className=\"font-bold lg:text-35base mb-3 uppercase\">\n                            <Link\n                                to={`/match/${slug}`}\n                                className=\"hover:text-primary\"\n                            >\n                                {title}\n                            </Link>\n                        </h3>\n                        <span className=\"text-primary\">\n                            {registeredTeams} Teams Registered\n                        </span>\n                    </div>\n                </div>\n                <div className=\"flex-shrink-0 lg:w-52 justify-center mb-6 lg:mb-0 text-center upcoming_play_video\">\n                    <span\n                        className=\"video_popup w-28 h-28 bg-primary rounded-full flex items-center justify-center mx-auto\"\n                        role=\"button\"\n                        tabIndex=\"0\"\n                        onClick={() => setOpen(true)}\n                        onKeyPress={(e) => console.log(e)}\n                    >\n                        <StaticImage\n                            src=\"../../data/images/icons/play-btn2.webp\"\n                            alt=\"\"\n                        />\n                    </span>{\" \"}\n                    <span className=\"text-secondary block mt-4 lg:mt-8\">\n                        Youtube Stream\n                    </span>\n                </div>\n                <div className=\"flex-1 flex justify-center items-center lg:justify-between lg:max-w-sm upcoming_gaming_thumb\">\n                    <Link to={`/bettle-teams/${tesmSlug1}`} className=\"mx-1.5\">\n                        <GatsbyImage\n                            className=\"md:h-auto\"\n                            image={getImage(teamImage1) || getImage(teamImage2)}\n                            alt=\"\"\n                        />\n                    </Link>\n                    <div className=\"mx-1.5\">\n                        <StaticImage\n                            src=\"../../data/images/team-logo/game-vs1.webp\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <Link to={`/bettle-teams/${tesmSlug2}`} className=\"mx-1.5\">\n                        <GatsbyImage\n                            className=\"md:h-auto\"\n                            image={getImage(teamImage2) || getImage(teamImage1)}\n                            alt=\"\"\n                        />\n                    </Link>\n                </div>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n        </Fragment>\n    );\n};\nMatchItem.propTypes = {\n    title: PropTypes.string,\n    registeredTeams: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    tesmSlug1: PropTypes.string,\n    tesmSlug2: PropTypes.string,\n    video_link: PropTypes.string,\n    teamImage1: PropTypes.object,\n    teamImage2: PropTypes.object,\n};\nexport default MatchItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SectionTitle = ({\n    heading,\n    description,\n    align,\n    color,\n    showDescription,\n}) => {\n    const title = {\n        showDescription: showDescription || false,\n        align: align || \"center\",\n        color: color || \"primary\",\n    };\n    return (\n        <div className=\"section-title\">\n            <div className=\"container\">\n                <div align={title.align} className=\"mx-auto\">\n                    <h2 className=\"font-bold max-w-3xl\">{heading}</h2>\n                    {title.showDescription && (\n                        <p className=\"max-w-xl mt-2 leading-7 text-18base\">\n                            {description}\n                        </p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nSectionTitle.propTypes = {\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    align: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n    color: PropTypes.oneOf([\"white\", \"primary\"]),\n    showDescription: PropTypes.bool,\n};\nexport default SectionTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nconst SingleTestimonial = ({ image, alt, name, description, designation }) => {\n    return (\n        <div className=\"testimonial_list flex flex-col md:flex-row items-center\">\n            <div className=\"testimonial_thumb w-28 md:w-32 lg:w-200 xl:w-260 flex-shrink-0\">\n                <GatsbyImage image={getImage(image)} alt={alt} />\n            </div>\n            <div className=\"testimonial_content flex-grow text-center md:text-left mt-8 md:mt-0 md:ml-14\">\n                <p className=\"text-base lg:text-20base leading-loose\">\n                    {description}\n                </p>\n                <div className=\"testimonial_author mt-5\">\n                    <h3 className=\"font-bold uppercase\">{name}</h3>\n                    <span className=\"text-primary mt-5 block\">\n                        {designation}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\nSingleTestimonial.propTypes = {\n    alt: PropTypes.string,\n    description: PropTypes.string,\n    designation: PropTypes.string,\n    name: PropTypes.string,\n    image: PropTypes.object,\n    buttons: PropTypes.arrayOf(\n        PropTypes.shape({\n            content: PropTypes.string,\n        })\n    ),\n};\nexport default SingleTestimonial;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Swiper, { SwiperSlide } from \"@components/shared/swiper\";\nimport SectionTitle from \"../../../components/title\";\nimport SingleTestimonial from \"../../../components/testimonial\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst TestimonialArea = ({ data }) => {\n    return (\n        <section className=\"testimonial-section bg-secondary-90 pt-16 pb-24  md:pt-28 md:pb-28 relative\">\n            <span className=\" absolute w-2/6 h-2 right-0 top-24 xs:block sm:hidden md:block md:top-48 bg-primary\"></span>\n            <div className=\"container px-4\">\n                <div className=\"section-title mb-15\">\n                    {data?.section_title && (\n                        <SectionTitle\n                            heading={data?.section_title.heading}\n                            {...data.section_title}\n                        />\n                    )}\n                </div>\n                <div className=\"py-9 px-10 lg:py-16 lg:px-24 bg-secondary-100 rounded-4xl\">\n                    <Swiper\n                        layout={{\n                            nav: \"testimonial-navigation\",\n                            dots: \"testimonial-dots-style\",\n                        }}\n                        navigation={{\n                            nextEl: \".testimonial-slider-button-next\",\n                            prevEl: \".testimonial-slider-button-prev\",\n                        }}\n                        slidesPerView={1}\n                        spaceBetween={0}\n                    >\n                        {data?.items &&\n                            data?.items.map((item) => (\n                                <SwiperSlide key={item.id}>\n                                    <SingleTestimonial\n                                        image={item?.images[0].src}\n                                        alt={item?.images[0].alt}\n                                        description={item?.description}\n                                        name={item?.name}\n                                        designation={item?.designation}\n                                    />\n                                </SwiperSlide>\n                            ))}\n                    </Swiper>\n                </div>\n                <div className=\"z-10 transform pt-12\">\n                    <div className=\"testimonial-slider-button-prev swipper-arrow text-white left-1/2 ml-8 absolute top-2/4 transform w-68 h-55 flex items-center justify-center bg-arrow-shape hover:bg-arrow-hover-shape transition-all bg-cover\">\n                        <StaticImage\n                            src=\"../../../data/images/icons/navigation-arrow1.webp\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"testimonial-slider-button-next swipper-arrow text-white right-1/2 absolute top-2/4 transform w-68 h-55 flex items-center justify-center bg-arrow-shape hover:bg-arrow-hover-shape transition-all bg-cover\">\n                        <StaticImage\n                            src=\"../../../data/images/icons/navigation-arrow2.webp\"\n                            alt=\"\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nTestimonialArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default TestimonialArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LiveStreaming from \"../../../components/live-streaming\";\nimport Swiper, { SwiperSlide } from \"@components/shared/swiper\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst WatchLiveStremingArea = ({ data }) => {\n    return (\n        <section className=\"watch-live-section py-16 md:py-28\">\n            <div className=\"container\">\n                <div className=\"relative\">\n                    <Swiper\n                        className=\"relative\"\n                        layout={{\n                            nav: \"watch-live-navigation\",\n                            dots: \"watch-live-dots-style\",\n                        }}\n                        navigation={{\n                            nextEl: \".watch-live-slider-button-next\",\n                            prevEl: \".watch-live-slider-button-prev\",\n                        }}\n                        slidesPerView={1}\n                        spaceBetween={0}\n                    >\n                        {data?.items &&\n                            data?.items.map((item) => (\n                                <SwiperSlide key={item.id}>\n                                    <LiveStreaming\n                                        title={\n                                            item?.liveStreaming?.headings[0]\n                                                .content\n                                        }\n                                        image={\n                                            item?.liveStreaming?.images[0].src\n                                        }\n                                        video_link={item?.liveStreaming?.link}\n                                    />\n                                </SwiperSlide>\n                            ))}\n                    </Swiper>\n                    <div className=\"absolute w-full z-10 top-1/2 transform -translate-y-1/2\">\n                        <div\n                            className=\"watch-live-slider-button-prev swipper-arrow text-white absolute top-2/4 \n                    transform -translate-x-2/4 w-14 h-10 lg:w-68 lg:h-55 flex items-center justify-center  \n                    bg-arrow-shape hover:bg-arrow-hover-shape transition-all left-auto -right-8 bg-cover\"\n                        >\n                            <StaticImage\n                                src=\"../../../data/images/icons/navigation-arrow1.webp\"\n                                alt=\"\"\n                            />\n                        </div>\n                        <div\n                            className=\"watch-live-slider-button-next swipper-arrow text-white absolute top-2/4 \n                    transform -translate-x-2/4 w-14 h-10 lg:w-68 lg:h-55 flex items-center justify-center \n                    bg-arrow-shape hover:bg-arrow-hover-shape transition-all left-8 bg-cover\"\n                        >\n                            <StaticImage\n                                src=\"../../../data/images/icons/navigation-arrow2.webp\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nWatchLiveStremingArea.propTypes = {\n    data: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default WatchLiveStremingArea;\n","export default __webpack_public_path__ + \"static/hero-bg1-82fc7416624f7e54a222475671a5e21d.webp\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Button from \"../../../components/shared/button\";\nimport HeroImage from \"../../../data/images/hero/hero-bg1.webp\";\nimport WeaponsBase from \"../../../components/weapons/weaponsBase\"\nimport { Canvas } from '@react-three/fiber'\n\nconst HeroArea = ({ data }) => {\n    return (\n        <section\n            className=\"relative h-540 md:h-650 lg:h-780 xl:h-940 bg-no-repeat bg-center bg-cover flex items-center\"\n            style={{\n                backgroundImage: `url(${HeroImage})`,\n            }}\n        >\n          \n          <div className=\"container px-4 z-10\">\n  <div className=\"text-white mt-6\">\n    {data?.headings?.[0] && (\n      <h1 className=\"mb-6 sm:mb-10 text-shadow uppercase max-w-3xl\">\n        {data.headings[0].content}\n      </h1>\n    )}\n    {data?.texts?.[0] && (\n      <p className=\"text-base lg:text-md font-bold mb-6 sm:mb-10\">\n        {data.texts[0].content}\n      </p>\n    )}\n    {data?.buttons &&\n      data.buttons.map(({ id, content, ...props }) => (\n        <Button key={id} {...props} className=\"text-white\">\n          {content}\n          <StaticImage\n            className=\"align-middle ml-3 transition-all group-hover:ml-5\"\n            src=\"../../../data/images/icons/arrrow-icon.webp\"\n            alt=\"\"\n          />\n        </Button>\n      ))}\n  </div>\n</div>\n<div className=\"container\">\n  <div style={{position: 'relative', paddingTop: '75%'}}>\n    <Canvas style={{position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'}} camera={{ fov: 45 }}>\n      <WeaponsBase glbFile=\"glb/Scar.glb\"></WeaponsBase>\n    </Canvas>\n  </div>\n</div>\n\n        </section>\n    );\n};\nHeroArea.propTypes = {\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(\n            PropTypes.shape({\n                level: PropTypes.string,\n                content: PropTypes.string,\n            })\n        ),\n        texts: PropTypes.arrayOf(\n            PropTypes.shape({\n                content: PropTypes.string,\n            })\n        ),\n        buttons: PropTypes.arrayOf(\n            PropTypes.shape({\n                content: PropTypes.string,\n            })\n        ),\n        images: PropTypes.arrayOf(\n            PropTypes.shape({\n                src: PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.shape({}),\n                ]).isRequired,\n                alt: PropTypes.string,\n            })\n        ),\n    }),\n};\nexport default HeroArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nconst WelcomeFeatures = ({ title, description, iconImage, bgShapImage }) => {\n    const image1 = getImage(iconImage);\n    const image2 = getImage(bgShapImage);\n    return (\n        <div className=\"py-15 px-12 relative mt-10\">\n            <div className=\"content relative z-10\">\n                <GatsbyImage className=\"mb-10\" image={image1} alt={title} />\n                <h3 className=\"font-bold text-white mb-4\">{title}</h3>\n                <p className=\"text-white leading-7\">{description}</p>\n            </div>\n            <div className=\"absolute inset-0 z-0\">\n                <GatsbyImage image={image2} alt={title} />\n            </div>\n        </div>\n    );\n};\nWelcomeFeatures.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    iconImage: PropTypes.object,\n    bgShapImage: PropTypes.object,\n};\nexport default WelcomeFeatures;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"../../../components/title\";\nimport WelcomeFeatures from \"../../../components/welcome-features\";\nconst WelcomeFeaturesArea = ({ data }) => {\n    return (\n        <section className=\"pt-16 md:pt-24\">\n            <div className=\"container px-4\">\n                {data?.section_title && (\n                    <SectionTitle\n                        heading={data?.section_title.heading}\n                        {...data.section_title}\n                    />\n                )}\n                <div className=\"flex flex-wrap -mx-3 text-center\">\n                    {data?.items &&\n                        data?.items.map((item) => (\n                            <div\n                                key={item.id}\n                                className=\"w-full md:w-1/2 lg:w-1/3 px-4\"\n                            >\n                                <WelcomeFeatures\n                                    title={item.headings[0].content}\n                                    level={item.headings[0].level}\n                                    iconImage={item.images[0].src}\n                                    bgShapImage={item.images[1].src}\n                                    description={item.description}\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nWelcomeFeaturesArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default WelcomeFeaturesArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MatchItem from \"../../../components/match\";\nimport SectionTitle from \"../../../components/title\";\nimport Button from \"../../../components/shared/button\";\n\nconst MatchArea = ({ data }) => {\n    return (\n        <section className=\"upcoming-gaming-section pb-16 md:pb-28\">\n            <div className=\"container\">\n                {data?.section_title && (\n                    <div className=\"section-title mb-15\">\n                        <SectionTitle\n                            heading={data?.section_title.heading}\n                            {...data.section_title}\n                        />\n                    </div>\n                )}\n                {data?.items &&\n                    data?.items.map((item) => (\n                        <MatchItem\n                            key={item.id}\n                            title={item?.title}\n                            date={item?.date}\n                            registeredTeams={item?.registeredTeams}\n                            slug={item?.slug}\n                            video_link={item?.liveStreaming?.link}\n                            teamImage1={item?.teams[0]?.logo.src}\n                            teamImage2={item?.teams[1]?.logo.src}\n                            tesmSlug1={item?.teams[0]?.slug}\n                            tesmSlug2={item?.teams[1]?.slug}\n                        />\n                    ))}\n                <div className=\"more-match text-center\">\n                    {data?.buttons &&\n                        data.buttons.map(({ id, content, ...props }) => (\n                            <Button\n                                key={id}\n                                {...props}\n                                className=\"text-white mt-15\"\n                            >\n                                {content}\n                            </Button>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nMatchArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n        buttons: PropTypes.arrayOf(\n            PropTypes.shape({\n                content: PropTypes.string,\n            })\n        ),\n    }),\n};\nexport default MatchArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GameCard from \"../../../components/games-card\";\nimport SectionTitle from \"../../../components/title\";\n\nconst PopulerGamesArea = ({ data }) => {\n    return (\n        <section className=\"populer-games-section pt-16 md:pt-24 py-16 md:py-28\">\n            <div className=\"container\">\n                {data?.section_title && (\n                    <div className=\"section-title mb-15\">\n                        <SectionTitle\n                            heading={data?.section_title.heading}\n                            {...data.section_title}\n                        />\n                    </div>\n                )}\n\n                <div className=\"flex flex-wrap -mt-8\">\n                    {data?.items &&\n                        data?.items.map((item) => (\n                            <div\n                                className=\"w-full md:w-1/2 lg:w-1/2 px-4\"\n                                key={item.id}\n                            >\n                                <GameCard\n                                    date={item?.date}\n                                    slug={item?.slug}\n                                    image={item.gameThum.src}\n                                    alt={item?.gameThum?.alt}\n                                    buttons={item?.buttons}\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nPopulerGamesArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default PopulerGamesArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"../../../components/title\";\nimport BlogCard from \"../../../components/blog-card\";\n\nconst LatestBlogArea = ({ data }) => {\n    return (\n        <section className=\"latest-blog-section pt-16 md:pt-24\">\n            <div className=\"container px-4\">\n                {data?.section_title && (\n                    <div className=\"section-title mb-15\">\n                        <SectionTitle\n                            heading={data?.section_title.heading}\n                            {...data.section_title}\n                        />\n                    </div>\n                )}\n                <div className=\"flex flex-wrap -mt-8\">\n                    {data?.items &&\n                        data?.items.map((item) => (\n                            <div\n                                className=\"w-full sm:w-1/2 md:w-1/2 lg:w-1/2 px-4\"\n                                key={`blog-post-${item.title}`}\n                            >\n                                <BlogCard\n                                    title={item.title}\n                                    author={item.author}\n                                    date={item.postedAt.date}\n                                    dateSlug={item.postedAt.slug}\n                                    slug={item.slug}\n                                    image1={item?.image?.src}\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nLatestBlogArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\n\nexport default LatestBlogArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SEO from \"@components/seo\";\nimport Layout from \"@layout\";\nimport HeroArea from \"../container/home/hero\";\nimport WelcomeFeaturesArea from \"../container/home/welcome-features\";\nimport WatchLiveStremingArea from \"../container/home/watch-live-streaming\";\nimport MatchArea from \"../container/home/match\";\nimport PopulerGamesArea from \"../container/home/popular-game\";\nimport TestimonialArea from \"../container/home/testimonial\";\nimport LatestBlogArea from \"../container/home/latest-blog\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils/functions\";\nimport FunfactArea from \"../container/home/funfact\";\n\nconst IndexPage = ({ data }) => {\n    const globalContent = normalizedData(data?.allGeneral?.nodes || []);\n    const content = normalizedData(data?.page?.content || []);\n    return (\n        <Layout\n            data={{\n                ...globalContent[\"menu\"],\n                ...globalContent[\"footer\"],\n            }}\n        >\n            <SEO title=\"Home\" pathname=\"/\" />\n            <HeroArea data={content[\"hero-section\"]} />\n            <WelcomeFeaturesArea data={content[\"welcome-section\"]} />\n            <WatchLiveStremingArea data={{ items: data.allMatch.nodes }} />\n            <MatchArea\n                data={{\n                    ...content[\"upcoming-match\"],\n                    items: data.allMatch.nodes,\n                }}\n            />\n            <FunfactArea data={content[\"funfact-section\"]} />\n            <PopulerGamesArea\n                data={{\n                    ...content[\"populer-games-section\"],\n                    items: data.allGames.nodes,\n                }}\n            />\n            <TestimonialArea data={content[\"testimonial-section\"]} />\n            <LatestBlogArea\n                data={{\n                    ...content[\"latest-section\"],\n                    items: data.latestPosts.nodes,\n                }}\n            />\n        </Layout>\n    );\n};\n\nIndexPage.propTypes = {\n    data: PropTypes.shape({\n        allGeneral: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        page: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allMatch: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allGames: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        latestPosts: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n    }),\n};\n\nexport const query = graphql`\n    query homePageQuery {\n        allGeneral {\n            nodes {\n                section\n                id\n                menu {\n                    ...Menu\n                }\n                footer {\n                    ...Footer\n                }\n            }\n        }\n        page(title: { eq: \"home\" }, pageType: { eq: homepage }) {\n            content {\n                ...PageContentAll\n            }\n        }\n        allMatch(sort: { date: DESC }, limit: 3) {\n            nodes {\n                ...Matchs\n            }\n        }\n        allGames(sort: { date: DESC }, limit: 4) {\n            nodes {\n                ...Games\n            }\n        }\n        latestPosts: allArticle(limit: 4, sort: { postedAt: { date: DESC } }) {\n            nodes {\n                ...Articles\n                image {\n                    alt\n                    src {\n                        childImageSharp {\n                            gatsbyImageData(\n                                height: 200\n                                width: 200\n                                quality: 100\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n"],"names":["_ref","title","date","slug","dateSlug","image1","React","className","Link","to","GatsbyImage","image","getImage","alt","StaticImage","src","__imageData","require","video_arr","video_id","video_channel","video_link","split","isOpen","setOpen","useState","Fragment","role","tabIndex","onClick","onKeyPress","e","console","log","Video","channel","videoId","registeredTeams","tesmSlug1","tesmSlug2","teamImage1","teamImage2","heading","description","align","color","showDescription","name","designation","data","section_title","SectionTitle","Object","assign","Swiper","layout","nav","dots","navigation","nextEl","prevEl","slidesPerView","spaceBetween","items","map","item","SwiperSlide","key","id","SingleTestimonial","images","_item$liveStreaming","_item$liveStreaming2","_item$liveStreaming3","LiveStreaming","liveStreaming","headings","content","link","_data$headings","_data$texts","style","backgroundImage","HeroImage","texts","buttons","_ref2","props","Button","position","paddingTop","Canvas","top","left","width","height","camera","fov","WeaponsBase","glbFile","iconImage","bgShapImage","image2","WelcomeFeatures","level","_item$teams$","_item$teams$2","_item$teams$3","_item$teams$4","MatchItem","teams","logo","_item$gameThum","GameCard","gameThum","_item$image","BlogCard","author","postedAt","_data$allGeneral","_data$page","globalContent","normalizedData","allGeneral","nodes","page","Layout","SEO","pathname","HeroArea","WelcomeFeaturesArea","WatchLiveStremingArea","allMatch","MatchArea","FunfactArea","PopulerGamesArea","allGames","TestimonialArea","LatestBlogArea","latestPosts"],"sourceRoot":""}